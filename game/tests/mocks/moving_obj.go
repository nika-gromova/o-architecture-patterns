// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nika-gromova/o-architecture-patterns/game/move (interfaces: MovingObject)
//
// Generated by this command:
//
//	mockgen -destination moving_obj.go -package mocks github.com/nika-gromova/o-architecture-patterns/game/move MovingObject
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	base "github.com/nika-gromova/o-architecture-patterns/game/base"
	gomock "go.uber.org/mock/gomock"
)

// MockMovingObject is a mock of MovingObject interface.
type MockMovingObject struct {
	ctrl     *gomock.Controller
	recorder *MockMovingObjectMockRecorder
	isgomock struct{}
}

// MockMovingObjectMockRecorder is the mock recorder for MockMovingObject.
type MockMovingObjectMockRecorder struct {
	mock *MockMovingObject
}

// NewMockMovingObject creates a new mock instance.
func NewMockMovingObject(ctrl *gomock.Controller) *MockMovingObject {
	mock := &MockMovingObject{ctrl: ctrl}
	mock.recorder = &MockMovingObjectMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMovingObject) EXPECT() *MockMovingObjectMockRecorder {
	return m.recorder
}

// GetLocation mocks base method.
func (m *MockMovingObject) GetLocation() (base.Vector, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocation")
	ret0, _ := ret[0].(base.Vector)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetLocation indicates an expected call of GetLocation.
func (mr *MockMovingObjectMockRecorder) GetLocation() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocation", reflect.TypeOf((*MockMovingObject)(nil).GetLocation))
}

// GetVelocity mocks base method.
func (m *MockMovingObject) GetVelocity() (base.Vector, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVelocity")
	ret0, _ := ret[0].(base.Vector)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetVelocity indicates an expected call of GetVelocity.
func (mr *MockMovingObjectMockRecorder) GetVelocity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVelocity", reflect.TypeOf((*MockMovingObject)(nil).GetVelocity))
}

// SetLocation mocks base method.
func (m *MockMovingObject) SetLocation(arg0 base.Vector) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLocation", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// SetLocation indicates an expected call of SetLocation.
func (mr *MockMovingObjectMockRecorder) SetLocation(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLocation", reflect.TypeOf((*MockMovingObject)(nil).SetLocation), arg0)
}
