// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nika-gromova/o-architecture-patterns/game/rotate (interfaces: RotatingObject)
//
// Generated by this command:
//
//	mockgen -destination rotating_obj.go -package mocks github.com/nika-gromova/o-architecture-patterns/game/rotate RotatingObject
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	base "github.com/nika-gromova/o-architecture-patterns/game/base"
	gomock "go.uber.org/mock/gomock"
)

// MockRotatingObject is a mock of RotatingObject interface.
type MockRotatingObject struct {
	ctrl     *gomock.Controller
	recorder *MockRotatingObjectMockRecorder
	isgomock struct{}
}

// MockRotatingObjectMockRecorder is the mock recorder for MockRotatingObject.
type MockRotatingObjectMockRecorder struct {
	mock *MockRotatingObject
}

// NewMockRotatingObject creates a new mock instance.
func NewMockRotatingObject(ctrl *gomock.Controller) *MockRotatingObject {
	mock := &MockRotatingObject{ctrl: ctrl}
	mock.recorder = &MockRotatingObjectMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRotatingObject) EXPECT() *MockRotatingObjectMockRecorder {
	return m.recorder
}

// GetAngle mocks base method.
func (m *MockRotatingObject) GetAngle() (base.Angle, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAngle")
	ret0, _ := ret[0].(base.Angle)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetAngle indicates an expected call of GetAngle.
func (mr *MockRotatingObjectMockRecorder) GetAngle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAngle", reflect.TypeOf((*MockRotatingObject)(nil).GetAngle))
}

// GetAngularVelocity mocks base method.
func (m *MockRotatingObject) GetAngularVelocity() (base.Angle, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAngularVelocity")
	ret0, _ := ret[0].(base.Angle)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetAngularVelocity indicates an expected call of GetAngularVelocity.
func (mr *MockRotatingObjectMockRecorder) GetAngularVelocity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAngularVelocity", reflect.TypeOf((*MockRotatingObject)(nil).GetAngularVelocity))
}

// SetAngle mocks base method.
func (m *MockRotatingObject) SetAngle(arg0 base.Angle) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetAngle", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// SetAngle indicates an expected call of SetAngle.
func (mr *MockRotatingObjectMockRecorder) SetAngle(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetAngle", reflect.TypeOf((*MockRotatingObject)(nil).SetAngle), arg0)
}
